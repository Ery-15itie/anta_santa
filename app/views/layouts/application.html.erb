<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "An'ta Santa" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Tailwind CSS CDN のみを使用  %>
    <script src="https://cdn.tailwindcss.com"></script>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# フラッシュメッセージ固定表示用のCSSと背景色をTailwind準拠で再定義 %>
    <style>
      .flash-container {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 50; /* Tailwind z-50 */
        pointer-events: none; /* 下の要素をクリック可能にする */
        padding: 1rem;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .flash-message {
        pointer-events: auto; /* メッセージ自体は操作可能にする */
        /* Tailwindのシャドウと角丸を使用 */
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
      }
      /* 淡い暖色系の背景を適用 (Tailwindの色に近い値に設定) */
      body {
        background-color: #fef3c7; /* Tailwind amber-100に近い色 */
      }
    </style>
  </head>

  <body>

    <%# ナビゲーションバー %>
    <% if user_signed_in? %>
      <header class="bg-white dark:bg-gray-800 shadow-lg border-b border-red-500/20 sticky top-0 z-40">
        <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex items-center justify-between h-16">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <span class="text-2xl font-extrabold text-red-600 dark:text-red-400">An'ta Santa</span>
              </div>
            </div>
            <div class="hidden md:block">
              <div class="ml-10 flex items-baseline space-x-4">
                <%= link_to 'ダッシュボード', dashboard_path, class: "text-gray-500 dark:text-gray-300 hover:bg-red-50 hover:text-red-700 px-3 py-2 rounded-md text-sm font-medium transition" %>
                <%= link_to 'ユーザー一覧', users_path, class: "text-gray-500 dark:text-gray-300 hover:bg-red-50 hover:text-red-700 px-3 py-2 rounded-md text-sm font-medium transition" %>
                <div class="relative">
                  <%= link_to evaluations_path, class: "text-gray-500 dark:text-gray-300 hover:bg-red-50 hover:text-red-700 px-3 py-2 rounded-md text-sm font-medium transition" do %>
                    <span>評価BOX</span>
                  <% end %>
                </div>
                <%= link_to 'ログアウト', destroy_user_session_path, data: { turbo_method: :delete }, class: "text-white bg-red-600 hover:bg-red-700 px-3 py-2 rounded-md text-sm font-medium transition" %>
              </div>
            </div>
          </div>
        </nav>
      </header>
    <% end %>

    <%# フラッシュメッセージ表示エリア (Tailwindスタイル) %>
    <div class="flash-container">
      <% flash.each do |type, msg| %>
        <div class="flash-message mt-2 px-6 py-3 text-sm font-medium <%= flash_class(type) %> transition-all duration-300 transform translate-y-0" role="alert">
          <%= msg %>
        </div>
      <% end %>
    </div>

    <%# メインコンテンツ %>
    <main class="py-10">
      <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
        <%= yield %>
      </div>
    </main>

    <%# フラッシュメッセージ自動非表示ロジック %>
    <script>
      document.addEventListener('turbo:load', () => {
        const alerts = document.querySelectorAll('.flash-container .flash-message');
        alerts.forEach(alertEl => {
          setTimeout(() => {
            alertEl.style.opacity = '0';
            alertEl.style.transform = 'translateY(-10px)';
            // アニメーション後にDOMから削除
            alertEl.addEventListener('transitionend', () => alertEl.remove());
          }, 5000); // 5秒
        });
      });
    </script>
    
  </body>
</html>

<%# 汎用的なFlashクラスを返すヘルパー関数 (Tailwindクラスを使用) %>
<% def flash_class(type)
     case type.to_sym
     when :notice then "bg-green-500 text-white" # notice (成功)
     when :alert  then "bg-red-500 text-white"   # alert (エラー/警告)
     when :error  then "bg-red-500 text-white"   # error
     when :success then "bg-green-500 text-white" # success
     when :warning then "bg-yellow-500 text-gray-800" # warning
     else "bg-gray-500 text-white"
     end
   end
%>